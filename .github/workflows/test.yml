name: Test Enhanced OBS Action

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      test_scenario:
        description: 'Test scenario to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - upload-single
          - upload-wildcard
          - upload-batch
          - download
          - bucket-ops
          - dry-run

env:
  OBS_ACCESS_KEY: ${{ secrets.OBS_ACCESS_KEY }}
  OBS_SECRET_KEY: ${{ secrets.OBS_SECRET_KEY }}
  OBS_REGION: ${{ secrets.OBS_REGION || 'cn-north-4' }}
  TEST_BUCKET: ${{ secrets.TEST_BUCKET || 'github-action-test-bucket' }}

jobs:
  # Build and prepare the action
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build action
        run: npm run build

      - name: Package action
        run: npm run package

      - name: Upload built action
        uses: actions/upload-artifact@v4
        with:
          name: built-action
          path: dist/

  # Test 1: Single file upload
  test-upload-single:
    needs: build
    runs-on: ubuntu-latest
    if: github.event.inputs.test_scenario == 'upload-single' || github.event.inputs.test_scenario == 'all' || github.event.inputs.test_scenario == ''
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download built action
        uses: actions/download-artifact@v4
        with:
          name: built-action
          path: dist/

      - name: Create test file
        run: |
          mkdir -p test-files
          echo "Hello World - Single File Test $(date)" > test-files/single-test.txt
          echo "File size: $(wc -c < test-files/single-test.txt) bytes"

      - name: Test single file upload
        uses: ./
        with:
          access_key: ${{ env.OBS_ACCESS_KEY }}
          secret_key: ${{ env.OBS_SECRET_KEY }}
          region: ${{ env.OBS_REGION }}
          bucket_name: ${{ env.TEST_BUCKET }}
          operation: upload
          source: test-files/single-test.txt
          destination: tests/single/
          progress: true

  # Test 2: Wildcard upload
  test-upload-wildcard:
    needs: build
    runs-on: ubuntu-latest
    if: github.event.inputs.test_scenario == 'upload-wildcard' || github.event.inputs.test_scenario == 'all' || github.event.inputs.test_scenario == ''
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download built action
        uses: actions/download-artifact@v4
        with:
          name: built-action
          path: dist/

      - name: Create test files with wildcard patterns
        run: |
          mkdir -p test-files/{docs,images,scripts}

          # Create various file types
          echo "Documentation file 1" > test-files/docs/readme.md
          echo "Documentation file 2" > test-files/docs/guide.md
          echo "Script file 1" > test-files/scripts/deploy.sh
          echo "Script file 2" > test-files/scripts/build.sh
          echo "Image placeholder 1" > test-files/images/logo.png
          echo "Image placeholder 2" > test-files/images/banner.jpg

          # Create some files to exclude
          echo "Temporary file" > test-files/temp.tmp
          echo "Log file" > test-files/debug.log

          echo "Created files:"
          find test-files -type f | sort

      - name: Test wildcard upload with exclusions
        uses: ./
        with:
          access_key: ${{ env.OBS_ACCESS_KEY }}
          secret_key: ${{ env.OBS_SECRET_KEY }}
          region: ${{ env.OBS_REGION }}
          bucket_name: ${{ env.TEST_BUCKET }}
          operation: upload
          source: test-files/**/*
          destination: tests/wildcard/
          exclude: "*.tmp,*.log"
          preserve_structure: true
          concurrency: 5
          progress: true

  # Test 3: Batch upload (many files)
  test-upload-batch:
    needs: build
    runs-on: ubuntu-latest
    if: github.event.inputs.test_scenario == 'upload-batch' || github.event.inputs.test_scenario == 'all' || github.event.inputs.test_scenario == ''
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download built action
        uses: actions/download-artifact@v4
        with:
          name: built-action
          path: dist/

      - name: Create many test files
        run: |
          mkdir -p batch-test

          # Create 50 small files to test batch processing
          for i in {1..50}; do
            echo "Batch test file $i - content $(date +%s)" > "batch-test/file-$i.txt"
          done

          # Create some larger files
          for i in {1..5}; do
            head -c 10000 /dev/urandom | base64 > "batch-test/large-file-$i.txt"
          done

          echo "Created $(find batch-test -type f | wc -l) files"
          echo "Total size: $(du -sh batch-test | cut -f1)"

      - name: Test batch upload
        uses: ./
        with:
          access_key: ${{ env.OBS_ACCESS_KEY }}
          secret_key: ${{ env.OBS_SECRET_KEY }}
          region: ${{ env.OBS_REGION }}
          bucket_name: ${{ env.TEST_BUCKET }}
          operation: upload
          source: batch-test/*
          destination: tests/batch/
          concurrency: 10
          retry_count: 2
          progress: true
          checksum_validation: true

  # Test 4: Download operation
  test-download:
    needs: [build, test-upload-single]
    runs-on: ubuntu-latest
    if: github.event.inputs.test_scenario == 'download' || github.event.inputs.test_scenario == 'all' || github.event.inputs.test_scenario == ''
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download built action
        uses: actions/download-artifact@v4
        with:
          name: built-action
          path: dist/

      - name: Test download operation
        uses: ./
        with:
          access_key: ${{ env.OBS_ACCESS_KEY }}
          secret_key: ${{ env.OBS_SECRET_KEY }}
          region: ${{ env.OBS_REGION }}
          bucket_name: ${{ env.TEST_BUCKET }}
          operation: download
          source: tests/single/single-test.txt
          destination: downloaded-files/
          progress: true

      - name: Verify downloaded file
        run: |
          if [ -f "downloaded-files/single-test.txt" ]; then
            echo "✅ File downloaded successfully"
            echo "Content:"
            cat downloaded-files/single-test.txt
          else
            echo "❌ File download failed"
            exit 1
          fi

  # Test 5: Bucket operations
  test-bucket-operations:
    needs: build
    runs-on: ubuntu-latest
    if: github.event.inputs.test_scenario == 'bucket-ops' || github.event.inputs.test_scenario == 'all' || github.event.inputs.test_scenario == ''
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download built action
        uses: actions/download-artifact@v4
        with:
          name: built-action
          path: dist/

      - name: Test bucket creation
        uses: ./
        with:
          access_key: ${{ env.OBS_ACCESS_KEY }}
          secret_key: ${{ env.OBS_SECRET_KEY }}
          region: ${{ env.OBS_REGION }}
          bucket_name: test-bucket-${{ github.run_id }}
          operation: create-bucket
          storage_class: STANDARD
          public_read: false

      - name: Test bucket deletion
        uses: ./
        with:
          access_key: ${{ env.OBS_ACCESS_KEY }}
          secret_key: ${{ env.OBS_SECRET_KEY }}
          region: ${{ env.OBS_REGION }}
          bucket_name: test-bucket-${{ github.run_id }}
          operation: delete-bucket

  # Test 6: Dry run mode
  test-dry-run:
    needs: build
    runs-on: ubuntu-latest
    if: github.event.inputs.test_scenario == 'dry-run' || github.event.inputs.test_scenario == 'all' || github.event.inputs.test_scenario == ''
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download built action
        uses: actions/download-artifact@v4
        with:
          name: built-action
          path: dist/

      - name: Create test files for dry run
        run: |
          mkdir -p dry-run-test
          echo "Dry run test file 1" > dry-run-test/file1.txt
          echo "Dry run test file 2" > dry-run-test/file2.txt

      - name: Test dry run mode
        uses: ./
        with:
          access_key: ${{ env.OBS_ACCESS_KEY }}
          secret_key: ${{ env.OBS_SECRET_KEY }}
          region: ${{ env.OBS_REGION }}
          bucket_name: ${{ env.TEST_BUCKET }}
          operation: upload
          source: dry-run-test/*
          destination: tests/dry-run/
          dry_run: true
          progress: true

  # Test 7: Error handling
  test-error-handling:
    needs: build
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download built action
        uses: actions/download-artifact@v4
        with:
          name: built-action
          path: dist/

      - name: Test invalid credentials (should fail gracefully)
        uses: ./
        continue-on-error: true
        with:
          access_key: invalid-key
          secret_key: invalid-secret
          region: ${{ env.OBS_REGION }}
          bucket_name: ${{ env.TEST_BUCKET }}
          operation: upload
          source: package.json
          destination: tests/error/

      - name: Test non-existent file (should fail gracefully)
        uses: ./
        continue-on-error: true
        with:
          access_key: ${{ env.OBS_ACCESS_KEY }}
          secret_key: ${{ env.OBS_SECRET_KEY }}
          region: ${{ env.OBS_REGION }}
          bucket_name: ${{ env.TEST_BUCKET }}
          operation: upload
          source: non-existent-file.txt
          destination: tests/error/

  # Summary job
  test-summary:
    needs: [
      test-upload-single,
      test-upload-wildcard,
      test-upload-batch,
      test-download,
      test-bucket-operations,
      test-dry-run
    ]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Test Summary
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Test | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Single File Upload | ${{ needs.test-upload-single.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Wildcard Upload | ${{ needs.test-upload-wildcard.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Batch Upload | ${{ needs.test-upload-batch.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Download | ${{ needs.test-download.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Bucket Operations | ${{ needs.test-bucket-operations.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Dry Run | ${{ needs.test-dry-run.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Workflow run: ${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY
